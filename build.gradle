/*
 * Tinkers Construct
 * Master build file
 * 
 * Authors: boni, Sunstrike, ProgWML6
 * Help from AbrarSyed
 */

buildscript {
    repositories {
        mavenCentral()
		mavenLocal()
        jcenter()
		maven { url "https://maven.minecraftforge.net" }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    maven {
      name = "CurseForge"
      url = "https://minecraft.curseforge.com/api/maven/"
    }
    }
    dependencies {
		//classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.+'
		classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        //classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

//apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
//apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
    maven {
        name 'DVS1 Maven FS'
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // compatlayer
        name 'K-4u maven'
        url "https://maven.k-4u.nl/"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
/*  maven {
    url = "https://maven.mcmoddev.com/"
  }*/
    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }
    maven { // Quark and ARL
        name = "BlameJared"
        url = "https://maven.blamejared.com"
    }

}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group= "slimeknights"
archivesBaseName = "TConstruct"
/*
configurations {
    deployerJars
}
*/
ext.artifact_version = '0'
if (System.getenv().ARTIFACT_VERSION != null) {
    artifact_version = "${system.getenv().ARTIFACT_VERSION}"
}
version = "${minecraft_version}-${mod_version}.${artifact_version}"

minecraft {
    //mappings channel: 'stable', version: '39-1.12'
	mappings channel: 'snapshot', version: '20170801-1.12'
	//snapshot_20170801

    accessTransformer = file('src/main/resources/META-INF/tconstruct_at.cfg')
}

// Create deobf dev jars
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
	manifest {
        attributes 'FMLAT': 'tconstruct_at.cfg'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives sourcesJar
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    compileOnly fg.deobf( "slimeknights.mantle:Mantle:${minecraft_version_short}-${mantle_version}" )
	//compileOnly fg.deobf( files( "libs/Mantle-1.12-1.3.3.55-deobf.jar" ) )

    // compile against the JEI API
    //compileOnly fg.deobf( "mezz.jei:jei_${minecraft_version}:${jei_version}:api" )
    // at runtime, use the full JEI jar
    //runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
	compileOnly fg.deobf( "mezz.jei:jei_${minecraft_version}:${jei_version}" )

    //compileOnly fg.deobf( "mcp.mobius.waila:Hwyla:${hwyla_version}" )
	compileOnly fg.deobf( files( "libs/Hwyla-1.8.26-B41_1.12.2.jar" ) )
    compileOnly fg.deobf( "mcjty.theoneprobe:TheOneProbe-1.12:${probe_version}" )
    compileOnly fg.deobf( "cofh:RedstoneFlux:${redstoneflux_version}:universal" )
    //deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'

    //deobfCompile "vazkii.autoreglib:AutoRegLib:${arl_version}"
	compileOnly fg.deobf( "vazkii.quark:Quark:${quark_version}:api" )
}
/*
sourceSets {
    main {
        resources {
            srcDir 'resources'
        }
    }
}
*/
processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "MCversion", "1.12.2-14.23.5.2860"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'MCversion':"1.12.2-14.23.5.2860"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
// Add Access Transformers Manifest
jar {
    manifest {
        attributes 'FMLAT': 'tconstruct_at.cfg'
    }
}

jar.finalizedBy('reobfJar')
